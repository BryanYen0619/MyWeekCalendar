apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 2
        versionName "2.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // 這是添加的
    lintOptions{
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'joda-time:joda-time:2.9.1'
    implementation 'com.squareup:otto:1.3.8'
}

// 這個版本是區分庫版本的，因此當我們需要更新library時記得修改這個版本
version = '1.0.0'

def siteUrl = 'https://github.com/BryanYen0619/WeekCalendar.git'      // 項目的主頁
def gitUrl = 'https://github.com/BryanYen0619/WeekCalendar.git'       // Git倉庫的url
group = 'noman.weekcalendar'        // Maven Group ID for the artifact，一般填你唯一的專案名稱
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'Weekclendar'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers { // 填寫一些開發者的訊息
                    developer {
                        id 'bryanyen0619'
                        name 'BryanYen'
                        email 'bryan2155@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'maven'
        name = 'weekcalendar'

        version {
            name = '1.0.0'
            desc = 'WeekCalendar'
            released  = new Date()
            vcsTag = '1.0.0'
        }

        licenses = ['Apache-2.0']
    }
    configurations = ['archives']
}

artifacts {
    archives javadocJar
    archives sourcesJar
}